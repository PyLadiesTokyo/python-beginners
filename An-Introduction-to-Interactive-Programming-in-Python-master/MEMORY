# implementation of card game - Memory

import simplegui
import random
turns=0
list1=[]
list2=[]
list3=[]
exposed=[]
state=0
l=[0,0]
# helper function to initialize globals
def new_game():
    global list1,list2,list3,list4,exposed,turns
    global state
    state = 0
    list1= range(8)
    list2= range(8)
    list3= list1+list2
    random.shuffle(list3)
    exposed=[False]*16
    turns=0
    label.set_text('Turns='+str(turns))
     
# define event handlers
def mouseclick(pos):
    
    global exposed,l,list3,turns
    
    k=pos[0]/100+4*(pos[1]/100)
    
    if exposed[k] is True:
          return
    else:
       exposed[k] = True

       global state
       if state == 0:
            state = 1
            l[0]=k
        
       elif state == 1:
            state = 2
            l[1]=k
            turns+=1
            label.set_text('Turns='+str(turns))
           
       else:
            state = 1
            if (list3[l[0]])!=(list3[l[1]]):
                exposed[l[0]]=False
                exposed[l[1]]=False
        
            l[0]=k

# cards are logically 50x100 pixels in size    
def draw(canvas):
    m=-1
    l=0
    for i in list3: 
        if l%4 == 0:
            k=0
            m+=2
        canvas.draw_text(str(i),(50+k, m*50), 42, 'Red')
        k+=100
        l+=1
    
    l=0
    m=-100
    for i in exposed:
        
        if l%4==0:
            m+=100
            k=0
        if i==False:
            canvas.draw_polygon([(k+0,m+0),(k+100,0+m),(k+100,m+100),(0+k,100+m)], 1,'White', 'Green')
        k+=100
        l+=1
       
# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 400, 400)
frame.set_canvas_background('Silver')
frame.add_button("Reset", new_game)
label = frame.add_label("Turns=0")

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
new_game()
frame.start()


# Always remember to review the grading rubric
